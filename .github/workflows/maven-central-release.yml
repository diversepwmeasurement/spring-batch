jobs:
  build:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Capture release version
      run: echo RELEASE_VERSION=${{ github.event.inputs.releaseVersion }} >> $GITHUB_ENV
    - continue-on-error: true
      name: Prepare directory structure
      run: 'mkdir -p nexus/org/springframework/batch/spring-batch-bom/$RELEASE_VERSION

        mkdir -p nexus/org/springframework/batch/spring-batch-infrastructure/$RELEASE_VERSION

        mkdir -p nexus/org/springframework/batch/spring-batch-core/$RELEASE_VERSION

        mkdir -p nexus/org/springframework/batch/spring-batch-test/$RELEASE_VERSION

        mkdir -p nexus/org/springframework/batch/spring-batch-integration/$RELEASE_VERSION

        '
    - continue-on-error: true
      env:
        ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
        ARTIFACTORY_URL: https://repo.spring.io/libs-staging-local/org/springframework/batch
        ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
      name: Download release files from Artifactory
      run: 'echo "Downloading BOM artifacts"

        cd nexus/org/springframework/batch/spring-batch-bom/$RELEASE_VERSION

        wget --user="$ARTIFACTORY_USERNAME" --password="$ARTIFACTORY_PASSWORD" $ARTIFACTORY_URL/spring-batch-bom/$RELEASE_VERSION/spring-batch-bom-$RELEASE_VERSION.pom


        echo "Downloading infrastructure artifacts"

        cd ../../../../../..

        cd nexus/org/springframework/batch/spring-batch-infrastructure/$RELEASE_VERSION

        wget --user="$ARTIFACTORY_USERNAME" --password="$ARTIFACTORY_PASSWORD" $ARTIFACTORY_URL/spring-batch-infrastructure/$RELEASE_VERSION/spring-batch-infrastructure-$RELEASE_VERSION.pom

        wget --user="$ARTIFACTORY_USERNAME" --password="$ARTIFACTORY_PASSWORD" $ARTIFACTORY_URL/spring-batch-infrastructure/$RELEASE_VERSION/spring-batch-infrastructure-$RELEASE_VERSION.jar

        wget --user="$ARTIFACTORY_USERNAME" --password="$ARTIFACTORY_PASSWORD" $ARTIFACTORY_URL/spring-batch-infrastructure/$RELEASE_VERSION/spring-batch-infrastructure-$RELEASE_VERSION-javadoc.jar

        wget --user="$ARTIFACTORY_USERNAME" --password="$ARTIFACTORY_PASSWORD" $ARTIFACTORY_URL/spring-batch-infrastructure/$RELEASE_VERSION/spring-batch-infrastructure-$RELEASE_VERSION-sources.jar


        echo "Downloading core artifacts"

        cd ../../../../../..

        cd nexus/org/springframework/batch/spring-batch-core/$RELEASE_VERSION

        wget --user="$ARTIFACTORY_USERNAME" --password="$ARTIFACTORY_PASSWORD" $ARTIFACTORY_URL/spring-batch-core/$RELEASE_VERSION/spring-batch-core-$RELEASE_VERSION.pom

        wget --user="$ARTIFACTORY_USERNAME" --password="$ARTIFACTORY_PASSWORD" $ARTIFACTORY_URL/spring-batch-core/$RELEASE_VERSION/spring-batch-core-$RELEASE_VERSION.jar

        wget --user="$ARTIFACTORY_USERNAME" --password="$ARTIFACTORY_PASSWORD" $ARTIFACTORY_URL/spring-batch-core/$RELEASE_VERSION/spring-batch-core-$RELEASE_VERSION-javadoc.jar

        wget --user="$ARTIFACTORY_USERNAME" --password="$ARTIFACTORY_PASSWORD" $ARTIFACTORY_URL/spring-batch-core/$RELEASE_VERSION/spring-batch-core-$RELEASE_VERSION-sources.jar


        echo "Downloading test artifacts"

        cd ../../../../../..

        cd nexus/org/springframework/batch/spring-batch-test/$RELEASE_VERSION

        wget --user="$ARTIFACTORY_USERNAME" --password="$ARTIFACTORY_PASSWORD" $ARTIFACTORY_URL/spring-batch-test/$RELEASE_VERSION/spring-batch-test-$RELEASE_VERSION.pom

        wget --user="$ARTIFACTORY_USERNAME" --password="$ARTIFACTORY_PASSWORD" $ARTIFACTORY_URL/spring-batch-test/$RELEASE_VERSION/spring-batch-test-$RELEASE_VERSION.jar

        wget --user="$ARTIFACTORY_USERNAME" --password="$ARTIFACTORY_PASSWORD" $ARTIFACTORY_URL/spring-batch-test/$RELEASE_VERSION/spring-batch-test-$RELEASE_VERSION-javadoc.jar

        wget --user="$ARTIFACTORY_USERNAME" --password="$ARTIFACTORY_PASSWORD" $ARTIFACTORY_URL/spring-batch-test/$RELEASE_VERSION/spring-batch-test-$RELEASE_VERSION-sources.jar


        echo "Downloading integration artifacts"

        cd ../../../../../..

        cd nexus/org/springframework/batch/spring-batch-integration/$RELEASE_VERSION

        wget --user="$ARTIFACTORY_USERNAME" --password="$ARTIFACTORY_PASSWORD" $ARTIFACTORY_URL/spring-batch-integration/$RELEASE_VERSION/spring-batch-integration-$RELEASE_VERSION.pom

        wget --user="$ARTIFACTORY_USERNAME" --password="$ARTIFACTORY_PASSWORD" $ARTIFACTORY_URL/spring-batch-integration/$RELEASE_VERSION/spring-batch-integration-$RELEASE_VERSION.jar

        wget --user="$ARTIFACTORY_USERNAME" --password="$ARTIFACTORY_PASSWORD" $ARTIFACTORY_URL/spring-batch-integration/$RELEASE_VERSION/spring-batch-integration-$RELEASE_VERSION-javadoc.jar

        wget --user="$ARTIFACTORY_USERNAME" --password="$ARTIFACTORY_PASSWORD" $ARTIFACTORY_URL/spring-batch-integration/$RELEASE_VERSION/spring-batch-integration-$RELEASE_VERSION-sources.jar

        '
    - continue-on-error: true
      id: nexus
      name: Sign artifacts and release them to Maven Central
      uses: jvalkeal/nexus-sync@v0
      with:
        close: true
        create: true
        generate-checksums: true
        password: ${{ secrets.OSSRH_S01_TOKEN_PASSWORD }}
        pgp-sign: true
        pgp-sign-passphrase: ${{ secrets.GPG_PASSPHRASE }}
        pgp-sign-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
        release: true
        staging-profile-name: ${{ secrets.OSSRH_STAGING_PROFILE_NAME }}
        upload: true
        url: ${{ secrets.OSSRH_URL }}
        username: ${{ secrets.OSSRH_S01_TOKEN_USERNAME }}
name: Maven Central Release
on:
  repository_dispatch:
    types: trigger-ga___maven-central-release.yml
